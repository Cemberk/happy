name: Build Mobile Releases

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.0)'
        required: true
        default: '1.0.0'

jobs:
  build-ios:
    name: Build iOS Release
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Setup Expo CLI
        run: npm install -g @expo/cli@latest

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Generate native iOS project
        run: yarn prebuild --platform ios

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      - name: Install iOS dependencies
        run: |
          cd ios
          pod install
          cd ..

      - name: Build iOS app
        run: |
          # Create release directory
          mkdir -p releases/ios
          
          # Build for iOS
          yarn ios:build:release
          
          # Copy build artifacts
          cp -r ios/build/Build/Products/Release-iphoneos/Happy.app releases/ios/
          
      - name: Create iOS Archive
        run: |
          cd releases/ios
          zip -r "Happy-iOS-${GITHUB_REF_NAME:-${{ github.event.inputs.version }}}.zip" Happy.app
          
      - name: Upload iOS Release
        uses: actions/upload-artifact@v4
        with:
          name: happy-ios-release
          path: releases/ios/Happy-iOS-*.zip

  build-android:
    name: Build Android Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Expo CLI
        run: npm install -g @expo/cli@latest

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Generate native Android project
        run: yarn prebuild --platform android

      - name: Build Android app
        run: |
          # Create release directory
          mkdir -p releases/android
          
          # Build for Android
          yarn android:build:release
          
          # Copy build artifacts
          cp android/app/build/outputs/apk/release/app-release.apk releases/android/Happy-Android-${GITHUB_REF_NAME:-${{ github.event.inputs.version }}}.apk
          
      - name: Upload Android Release
        uses: actions/upload-artifact@v4
        with:
          name: happy-android-release
          path: releases/android/Happy-Android-*.apk

  build-web:
    name: Build Web Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build web app
        run: |
          # Create release directory
          mkdir -p releases/web
          
          # Build for web (export static files)
          yarn web:build
          
          # Copy build artifacts (expo export:web creates dist directory)
          cp -r dist/* releases/web/
          
      - name: Create Web Archive
        run: |
          cd releases
          zip -r "Happy-Web-${GITHUB_REF_NAME:-${{ github.event.inputs.version }}}.zip" web/
          
      - name: Upload Web Release
        uses: actions/upload-artifact@v4
        with:
          name: happy-web-release
          path: releases/Happy-Web-*.zip

  create-release:
    name: Create GitHub Release
    needs: [build-ios, build-android, build-web]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name || format('v{0}', github.event.inputs.version) }}
          name: Happy v${{ github.ref_name || github.event.inputs.version }}
          body: |
            ## Happy Coder Release v${{ github.ref_name || github.event.inputs.version }}
            
            ### ðŸš€ What's New
            - Complete peer-to-peer networking with Nebula
            - No cloud dependencies - your data stays on your devices
            - Better performance with direct connections
            - Free forever - no server costs
            
            ### ðŸ“± Installation
            
            **Mobile Apps:**
            - **iOS**: Download Happy-iOS-*.zip, extract and install
            - **Android**: Download Happy-Android-*.apk and install
            
            **CLI:**
            ```bash
            npm install -g happy-coder
            happy setup
            ```
            
            **Web:** 
            - Download Happy-Web-*.zip and serve with any web server
            
            ### ðŸŒŸ Getting Started
            1. Install CLI: `npm install -g happy-coder`
            2. Setup network: `happy setup`
            3. Install mobile app and scan QR code
            4. Start coding: `happy` instead of `claude`
            
            ### ðŸ”’ Security
            - Certificate-based authentication
            - End-to-end encryption (Nebula + Happy's E2E)
            - No third-party servers can access your data
            
            ### ðŸ“– Documentation
            See [README](https://github.com/slopus/happy-cli/blob/main/README_NEBULA.md) for detailed setup instructions.
          files: |
            artifacts/happy-ios-release/*
            artifacts/happy-android-release/*
            artifacts/happy-web-release/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}